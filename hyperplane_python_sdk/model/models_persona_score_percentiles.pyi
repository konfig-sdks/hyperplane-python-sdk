# coding: utf-8

"""
    Hyperplane API Gateway

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from hyperplane_python_sdk import schemas  # noqa: F401


class ModelsPersonaScorePercentiles(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Percentile scores for users scored for a particular persona.
    """


    class MetaOapg:
        
        class properties:
            percentile_10 = schemas.NumberSchema
            percentile_20 = schemas.NumberSchema
            percentile_30 = schemas.NumberSchema
            percentile_40 = schemas.NumberSchema
            percentile_50 = schemas.NumberSchema
            percentile_60 = schemas.NumberSchema
            percentile_70 = schemas.NumberSchema
            percentile_80 = schemas.NumberSchema
            percentile_90 = schemas.NumberSchema
            __annotations__ = {
                "percentile_10": percentile_10,
                "percentile_20": percentile_20,
                "percentile_30": percentile_30,
                "percentile_40": percentile_40,
                "percentile_50": percentile_50,
                "percentile_60": percentile_60,
                "percentile_70": percentile_70,
                "percentile_80": percentile_80,
                "percentile_90": percentile_90,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["percentile_10"]) -> MetaOapg.properties.percentile_10: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["percentile_20"]) -> MetaOapg.properties.percentile_20: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["percentile_30"]) -> MetaOapg.properties.percentile_30: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["percentile_40"]) -> MetaOapg.properties.percentile_40: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["percentile_50"]) -> MetaOapg.properties.percentile_50: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["percentile_60"]) -> MetaOapg.properties.percentile_60: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["percentile_70"]) -> MetaOapg.properties.percentile_70: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["percentile_80"]) -> MetaOapg.properties.percentile_80: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["percentile_90"]) -> MetaOapg.properties.percentile_90: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["percentile_10", "percentile_20", "percentile_30", "percentile_40", "percentile_50", "percentile_60", "percentile_70", "percentile_80", "percentile_90", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["percentile_10"]) -> typing.Union[MetaOapg.properties.percentile_10, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["percentile_20"]) -> typing.Union[MetaOapg.properties.percentile_20, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["percentile_30"]) -> typing.Union[MetaOapg.properties.percentile_30, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["percentile_40"]) -> typing.Union[MetaOapg.properties.percentile_40, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["percentile_50"]) -> typing.Union[MetaOapg.properties.percentile_50, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["percentile_60"]) -> typing.Union[MetaOapg.properties.percentile_60, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["percentile_70"]) -> typing.Union[MetaOapg.properties.percentile_70, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["percentile_80"]) -> typing.Union[MetaOapg.properties.percentile_80, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["percentile_90"]) -> typing.Union[MetaOapg.properties.percentile_90, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["percentile_10", "percentile_20", "percentile_30", "percentile_40", "percentile_50", "percentile_60", "percentile_70", "percentile_80", "percentile_90", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        percentile_10: typing.Union[MetaOapg.properties.percentile_10, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        percentile_20: typing.Union[MetaOapg.properties.percentile_20, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        percentile_30: typing.Union[MetaOapg.properties.percentile_30, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        percentile_40: typing.Union[MetaOapg.properties.percentile_40, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        percentile_50: typing.Union[MetaOapg.properties.percentile_50, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        percentile_60: typing.Union[MetaOapg.properties.percentile_60, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        percentile_70: typing.Union[MetaOapg.properties.percentile_70, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        percentile_80: typing.Union[MetaOapg.properties.percentile_80, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        percentile_90: typing.Union[MetaOapg.properties.percentile_90, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ModelsPersonaScorePercentiles':
        return super().__new__(
            cls,
            *args,
            percentile_10=percentile_10,
            percentile_20=percentile_20,
            percentile_30=percentile_30,
            percentile_40=percentile_40,
            percentile_50=percentile_50,
            percentile_60=percentile_60,
            percentile_70=percentile_70,
            percentile_80=percentile_80,
            percentile_90=percentile_90,
            _configuration=_configuration,
            **kwargs,
        )

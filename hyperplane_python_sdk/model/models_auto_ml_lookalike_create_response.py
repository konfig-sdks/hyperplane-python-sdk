# coding: utf-8

"""
    Hyperplane API Gateway

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from hyperplane_python_sdk import schemas  # noqa: F401


class ModelsAutoMLLookalikeCreateResponse(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "run_id",
            "input_label_summary",
        }
        
        class properties:
        
            @staticmethod
            def input_label_summary() -> typing.Type['ModelsInputLabelSummary']:
                return ModelsInputLabelSummary
            run_id = schemas.StrSchema
            run_description = schemas.StrSchema
            __annotations__ = {
                "input_label_summary": input_label_summary,
                "run_id": run_id,
                "run_description": run_description,
            }
    
    run_id: MetaOapg.properties.run_id
    input_label_summary: 'ModelsInputLabelSummary'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["input_label_summary"]) -> 'ModelsInputLabelSummary': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["run_id"]) -> MetaOapg.properties.run_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["run_description"]) -> MetaOapg.properties.run_description: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["input_label_summary", "run_id", "run_description", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["input_label_summary"]) -> 'ModelsInputLabelSummary': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["run_id"]) -> MetaOapg.properties.run_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["run_description"]) -> typing.Union[MetaOapg.properties.run_description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["input_label_summary", "run_id", "run_description", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        run_id: typing.Union[MetaOapg.properties.run_id, str, ],
        input_label_summary: 'ModelsInputLabelSummary',
        run_description: typing.Union[MetaOapg.properties.run_description, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ModelsAutoMLLookalikeCreateResponse':
        return super().__new__(
            cls,
            *args,
            run_id=run_id,
            input_label_summary=input_label_summary,
            run_description=run_description,
            _configuration=_configuration,
            **kwargs,
        )

from hyperplane_python_sdk.model.models_input_label_summary import ModelsInputLabelSummary

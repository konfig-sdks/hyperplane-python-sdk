# coding: utf-8

"""
    Hyperplane API Gateway

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from hyperplane_python_sdk import schemas  # noqa: F401


class ModelsUserPersonaScore(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    User associated with a given persona
    """


    class MetaOapg:
        required = {
            "persona_id",
            "persona_name",
        }
        
        class properties:
            persona_id = schemas.StrSchema
            persona_name = schemas.StrSchema
            persona_score = schemas.NumberSchema
            __annotations__ = {
                "persona_id": persona_id,
                "persona_name": persona_name,
                "persona_score": persona_score,
            }
    
    persona_id: MetaOapg.properties.persona_id
    persona_name: MetaOapg.properties.persona_name
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["persona_id"]) -> MetaOapg.properties.persona_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["persona_name"]) -> MetaOapg.properties.persona_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["persona_score"]) -> MetaOapg.properties.persona_score: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["persona_id", "persona_name", "persona_score", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["persona_id"]) -> MetaOapg.properties.persona_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["persona_name"]) -> MetaOapg.properties.persona_name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["persona_score"]) -> typing.Union[MetaOapg.properties.persona_score, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["persona_id", "persona_name", "persona_score", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        persona_id: typing.Union[MetaOapg.properties.persona_id, str, ],
        persona_name: typing.Union[MetaOapg.properties.persona_name, str, ],
        persona_score: typing.Union[MetaOapg.properties.persona_score, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ModelsUserPersonaScore':
        return super().__new__(
            cls,
            *args,
            persona_id=persona_id,
            persona_name=persona_name,
            persona_score=persona_score,
            _configuration=_configuration,
            **kwargs,
        )

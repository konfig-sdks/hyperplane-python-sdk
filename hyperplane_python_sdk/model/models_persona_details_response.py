# coding: utf-8

"""
    Hyperplane API Gateway

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from hyperplane_python_sdk import schemas  # noqa: F401


class ModelsPersonaDetailsResponse(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "persona_id",
            "creation_datetime",
            "persona_score_statistics",
            "definition",
        }
        
        class properties:
            creation_datetime = schemas.StrSchema
        
            @staticmethod
            def definition() -> typing.Type['ModelsPersonaCreateRequest']:
                return ModelsPersonaCreateRequest
            persona_id = schemas.StrSchema
        
            @staticmethod
            def persona_score_statistics() -> typing.Type['ModelsPersonaScoreStatistics']:
                return ModelsPersonaScoreStatistics
            __annotations__ = {
                "creation_datetime": creation_datetime,
                "definition": definition,
                "persona_id": persona_id,
                "persona_score_statistics": persona_score_statistics,
            }
    
    persona_id: MetaOapg.properties.persona_id
    creation_datetime: MetaOapg.properties.creation_datetime
    persona_score_statistics: 'ModelsPersonaScoreStatistics'
    definition: 'ModelsPersonaCreateRequest'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["creation_datetime"]) -> MetaOapg.properties.creation_datetime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["definition"]) -> 'ModelsPersonaCreateRequest': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["persona_id"]) -> MetaOapg.properties.persona_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["persona_score_statistics"]) -> 'ModelsPersonaScoreStatistics': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["creation_datetime", "definition", "persona_id", "persona_score_statistics", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["creation_datetime"]) -> MetaOapg.properties.creation_datetime: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["definition"]) -> 'ModelsPersonaCreateRequest': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["persona_id"]) -> MetaOapg.properties.persona_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["persona_score_statistics"]) -> 'ModelsPersonaScoreStatistics': ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["creation_datetime", "definition", "persona_id", "persona_score_statistics", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        persona_id: typing.Union[MetaOapg.properties.persona_id, str, ],
        creation_datetime: typing.Union[MetaOapg.properties.creation_datetime, str, ],
        persona_score_statistics: 'ModelsPersonaScoreStatistics',
        definition: 'ModelsPersonaCreateRequest',
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ModelsPersonaDetailsResponse':
        return super().__new__(
            cls,
            *args,
            persona_id=persona_id,
            creation_datetime=creation_datetime,
            persona_score_statistics=persona_score_statistics,
            definition=definition,
            _configuration=_configuration,
            **kwargs,
        )

from hyperplane_python_sdk.model.models_persona_create_request import ModelsPersonaCreateRequest
from hyperplane_python_sdk.model.models_persona_score_statistics import ModelsPersonaScoreStatistics

# coding: utf-8

"""
    Hyperplane API Gateway

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class ModelsLocation(BaseModel):
    # City name
    city: typing.Optional[str] = Field(None, alias='city')

    # IBGE city code
    city_code: typing.Optional[str] = Field(None, alias='city_code')

    # Country name
    country: typing.Optional[str] = Field(None, alias='country')

    # Full address (e.g., Av. Lúcio Costa 1234, Copacabana, Rio de Janeiro, Brasil)
    full_address: typing.Optional[str] = Field(None, alias='full_address')

    # Location latitude
    latitude: typing.Optional[typing.Union[int, float]] = Field(None, alias='latitude')

    # Location longitude
    longitude: typing.Optional[typing.Union[int, float]] = Field(None, alias='longitude')

    # Postal code (i.e., CEP, e.g., '22620-171')
    postal_code: typing.Optional[str] = Field(None, alias='postal_code')

    # Primary address (e.g., Av. Lúcio Costa, 1234)
    primary_address: typing.Optional[str] = Field(None, alias='primary_address')

    # State name
    state: typing.Optional[str] = Field(None, alias='state')

    # Type of location (e.g., personal, home, business, ...)
    type: typing.Optional[str] = Field(None, alias='type')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )

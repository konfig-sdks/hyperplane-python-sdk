# coding: utf-8

"""
    Hyperplane API Gateway

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from hyperplane_python_sdk.pydantic.models_location import ModelsLocation
from hyperplane_python_sdk.pydantic.models_merchant_info import ModelsMerchantInfo
from hyperplane_python_sdk.pydantic.models_transfer_metadata import ModelsTransferMetadata

class ModelsTransactionEnrichmentResponse(BaseModel):
    # Transaction description
    description: typing.Optional[str] = Field(None, alias='description')

    # Amount of transaction
    amount: typing.Optional[typing.Union[int, float]] = Field(None, alias='amount')

    # Category enum of transaction
    category: typing.Optional[str] = Field(None, alias='category')

    # Category human-readable name of transaction
    category_name: typing.Optional[str] = Field(None, alias='category_name')

    # Transaction currency
    currency: typing.Optional[str] = Field(None, alias='currency')

    # Current installment. If 0, it is not an installment
    current_installment: typing.Optional[int] = Field(None, alias='current_installment')

    # Date of transaction
    date: typing.Optional[str] = Field(None, alias='date')

    # First installment date, that is, the purchase date
    installment_start_date: typing.Optional[str] = Field(None, alias='installment_start_date')

    # Contains metadata about the merchant, if available.
    merchant_info: typing.Optional[ModelsMerchantInfo] = Field(None, alias='merchant_info')

    # Number of installments
    number_of_installments: typing.Optional[int] = Field(None, alias='number_of_installments')

    # Sum of amounts for all installments
    total_installed_amount: typing.Optional[typing.Union[int, float]] = Field(None, alias='total_installed_amount')

    # Unique transaction id
    transaction_id: typing.Optional[str] = Field(None, alias='transaction_id')

    # Location where the transaction happened
    transaction_location: typing.Optional[ModelsLocation] = Field(None, alias='transaction_location')

    # Transaction status
    transaction_status: typing.Optional[str] = Field(None, alias='transaction_status')

    # Contains metadata about the payment method, the sender, and the receiver.
    transfer_metadata: typing.Optional[ModelsTransferMetadata] = Field(None, alias='transfer_metadata')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )

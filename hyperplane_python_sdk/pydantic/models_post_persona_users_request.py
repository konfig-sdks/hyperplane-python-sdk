# coding: utf-8

"""
    Hyperplane API Gateway

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from hyperplane_python_sdk.pydantic.models_categorical_attribute_filter import ModelsCategoricalAttributeFilter
from hyperplane_python_sdk.pydantic.models_numerical_attribute_filter import ModelsNumericalAttributeFilter
from hyperplane_python_sdk.pydantic.models_post_persona_users_request_blocklist import ModelsPostPersonaUsersRequestBlocklist
from hyperplane_python_sdk.pydantic.models_timestamp_attribute_filter import ModelsTimestampAttributeFilter

class ModelsPostPersonaUsersRequest(BaseModel):
    blocklist: ModelsPostPersonaUsersRequestBlocklist = Field(alias='blocklist')

    # Filter branch based on a list of allowed values
    branch: ModelsCategoricalAttributeFilter = Field(alias='branch')

    # Filter birth date based on a date range
    birth_date: typing.Optional[ModelsTimestampAttributeFilter] = Field(None, alias='birth_date')

    # Filter cbo code based on a list of allowed values
    cbo_code: typing.Optional[ModelsCategoricalAttributeFilter] = Field(None, alias='cbo_code')

    # Filter declared monthly income based on a numeric range
    declared_monthly_income: typing.Optional[ModelsNumericalAttributeFilter] = Field(None, alias='declared_monthly_income')

    # Filter job title based on a list of allowed values
    job_title: typing.Optional[ModelsCategoricalAttributeFilter] = Field(None, alias='job_title')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )

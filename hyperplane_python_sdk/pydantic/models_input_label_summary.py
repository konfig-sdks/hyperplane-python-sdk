# coding: utf-8

"""
    Hyperplane API Gateway

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from hyperplane_python_sdk.pydantic.models_input_label_summary_label_weight_counts import ModelsInputLabelSummaryLabelWeightCounts
from hyperplane_python_sdk.pydantic.models_input_label_summary_monthly_counts import ModelsInputLabelSummaryMonthlyCounts
from hyperplane_python_sdk.pydantic.models_input_label_summary_monthly_positive_rates import ModelsInputLabelSummaryMonthlyPositiveRates

class ModelsInputLabelSummary(BaseModel):
    # Number of labels that were provided by the user.
    num_input_labels: int = Field(alias='num_input_labels')

    # Number of distinct users that were provided by the user
    num_input_users: int = Field(alias='num_input_users')

    # Number of data rows that will be used in training
    num_matched_labels: int = Field(alias='num_matched_labels')

    # Number of distinct users that will be used in training
    num_training_users: int = Field(alias='num_training_users')

    label_weight_counts: typing.Optional[ModelsInputLabelSummaryLabelWeightCounts] = Field(None, alias='label_weight_counts')

    monthly_counts: typing.Optional[ModelsInputLabelSummaryMonthlyCounts] = Field(None, alias='monthly_counts')

    monthly_positive_rates: typing.Optional[ModelsInputLabelSummaryMonthlyPositiveRates] = Field(None, alias='monthly_positive_rates')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
